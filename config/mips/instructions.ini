//LOAD
[GROUP]
{INSTRUCTIONS}
lb, lw, lbu, lwl, lwr
{FORMAT}
	ins	rd,offset(rs)
{TYPE}
load

[GROUP]
{INSTRUCTIONS}
lwc0
{FORMAT}
	ins	imm,offset(imm)
{TYPE}
load

//ARITHMETIC
[GROUP]
{INSTRUCTIONS}
add, addu, and, nor, or, sllv, slt, sltu, srav, srlv, sub, subu, xor
{FORMAT}
	ins	rd,rs,rs
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
addi, addu, addiu, add, andi, ori, sll, slt, slti, sltiu, sltu, sra, srl, subu, sub, xori
{FORMAT}
	ins	rd,rs,imm
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
move
{FORMAT}
	ins	rd,rs
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
la
{FORMAT}
	ins	rd,target
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
li, lw
{FORMAT}
	ins	rd,imm
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
div, divu
{FORMAT}
	ins	rs,rs
//{HIDDEN_REGISTERS}
//rd: $lo, $hi
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
lui, mfc0
{FORMAT}
	ins	rd,imm
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
mfhi, mflo, mthi, mtlo
{FORMAT}
	ins	rd
//{HIDDEN_REGISTERS}
//rs: $hi
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
mtc0
{FORMAT}
	ins	rs,imm
{TYPE}
arithmetic

[GROUP]
{INSTRUCTIONS}
mult, multu
{FORMAT}
	ins	rs,rs
//{HIDDEN_REGISTERS}
//rd: $lo
{TYPE}
arithmetic

//BRANCH TO TARGET LABEL
[GROUP]
{INSTRUCTIONS}
beq, bne, bge, ble
{FORMAT}
	ins	rs,rs,target
{TYPE}
branch_to_target

[GROUP]
{INSTRUCTIONS}
bgez, bgtz, blez, bltz, beqz, bnez
{FORMAT}
	ins	rs,target
//{HIDDEN_REGISTERS}
//rs: $0
{TYPE}
branch_to_target

[GROUP]
{INSTRUCTION}
bgezal, bltzal
{FORMAT}
	ins	rs,target
{HIDDEN_REGISTERS}
rd: $31
rs: $0
{TYPE}
branch_to_target

//JUMP TO TARGET LABEL
[GROUP]
{INSTRUCTIONS}
j
{FORMAT}
	ins	target
{TYPE}
jump_to_target

[GROUP]
{INSTRUCTIONS}
jal
{FORMAT}
	ins	target
{HIDDEN_REGISTERS}
rd: $31
{TYPE}
jump_to_target

//JUMP TO REGISTER
[GROUP]
{INSTRUCTIONS}
jalr
{FORMAT}
	ins	rd,rs
{TYPE}
jump_to_register

[GROUP]
{INSTRUCTIONS}
jr
{FORMAT}
	ins	rs
{TYPE}
jump_to_register

[GROUP]
{INSTRUCTIONS}
jalr
{FORMAT}
	ins	rs
{HIDDEN_REGISTERS}
rd: $31
{TYPE}
jump_to_register

//NO_OPERATION
[GROUP]
{INSTRUCTIONS}
nop
{FORMAT}
	ins
{TYPE}
no_operation

//OTHER
[GROUP]
{INSTRUCTIONS}
break, syscall
{FORMAT}
	ins
{TYPE}
other

[GROUP]
{INSTRUCTIONS}
cop0
{FORMAT}
	ins	imm
{TYPE}
other

//STORE
[GROUP]
{INSTRUCTIONS}
sw, sb, swl, swr
{FORMAT}
	ins	rs,offset(rs)
{TYPE}
store

[GROUP]
{INSTRUCTIONS}
swc0
{FORMAT}
	ins	imm,offset(imm)
{TYPE}
store
